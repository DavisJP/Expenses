apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

task jacocoTestReport(type: JacocoReport, dependsOn: ['testMockDebugUnitTest', 'createMockDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testMockDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

sonarqube {
    properties {
        property "sonar.projectName", "Expenses"
        property "sonar.projectKey", "com.davismiyashiro.expenses"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/"
        property "sonar.projectVersion", android.defaultConfig.versionName
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        versionCode 1
        versionName "0.5"
        minSdkVersion 21
        targetSdkVersion 28

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //To enable the coverage report for local tests when using version 2.2.+
    //Robolectric tests may have issues
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions "free"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "free"
        }
        prod {
            applicationId 'com.davismiyashiro.expenses'
            dimension "free"
        }
    }

    // mockRelease is not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.jakewharton.timber:timber:4.6.0'

    testImplementation 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"
    testImplementation "org.robolectric:shadows-multidex:3.3.2"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.1.4-3'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"

    //Instrumentation tests library
    androidTestImplementation 'org.mockito:mockito-core:2.23.0'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'

    //injection
    implementation 'com.google.dagger:dagger:2.10'
    kapt 'com.google.dagger:dagger-compiler:2.10'

    implementation 'com.jakewharton:butterknife:8.5.1'
    kapt 'com.jakewharton:butterknife-compiler:8.5.1'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    implementation 'io.reactivex:rxandroid:1.2.0'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'

    //LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
}
